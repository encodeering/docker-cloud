version: '3.5'
services:
  traefik:
    image: encodeering/traefik-${ARCH:-armhf}:2.11-alpine
    command:
      - --log.level=INFO
      - --entryPoints.https.address=:443
      - --entryPoints.http.address=:80
      - --entryPoints.http.http.redirections.entryPoint.to=https
      - --entryPoints.http.http.redirections.entryPoint.scheme=https
      - --providers.docker.watch=true
      - --providers.docker.exposedByDefault=false
      - --certificatesResolvers.default.acme.email=${EMAIL}
      - --certificatesResolvers.default.acme.httpChallenge.entrypoint=http
      - --certificatesResolvers.default.acme.storage=/data/acme.json
    volumes:
      - proxy:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "443:443"
    networks:
      traefik:

  nginx:
    image: encodeering/${PROVIDER:-nextcloud}-${ARCH:-armhf}:${VERSION:-30.0}-alpine-nginx
    volumes:
      - www:/var/www/html
    depends_on:
      - cloud
    environment:
      VHOST: ssl-off-h2c
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.http.routers.cloud.entrypoints: http
      traefik.http.routers.cloud.rule: Host(`${DOMAIN}`) # && Headers(`X-Bootstrap`, `f22c97f5-eaf3-458d-b483-1df930a56022`) # useful during a bootstrap event if you can't shield the process in another way; requires a browser extension. please use a different value and remove it afterward
      traefik.http.routers.cloud-secure.rule: Host(`${DOMAIN}`) # && Headers(`X-Bootstrap`, `f22c97f5-eaf3-458d-b483-1df930a56022`)
      traefik.http.routers.cloud-secure.tls: true
      traefik.http.routers.cloud-secure.tls.certresolver: default
      traefik.http.routers.cloud-secure.service: cloud
      traefik.http.services.cloud.loadbalancer.server.port: 80
      traefik.http.services.cloud.loadbalancer.server.scheme: h2c
    networks:
      cloud:
      traefik:

  cloud:
    image: encodeering/${PROVIDER:-nextcloud}-${ARCH:-armhf}:${VERSION:-30.0}-alpine-fpm-sequel
    user: www-data
    volumes:
      - www:/var/www/html
    depends_on:
      - postgres
      - redis
    networks:
      cloud:
        aliases:
          - php

  postgres:
    image: encodeering/postgres-${ARCH:-armhf}:16-alpine
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: storage
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${SECRET:-secret}
    networks:
      cloud:

  redis:
    image: encodeering/redis-${ARCH:-armhf}:7.4-alpine
    volumes:
      - cache:/data
    environment:
      REDIS_MAXCONN: 10000
    networks:
      cloud:

volumes:
  www:
  db:
  cache:
  proxy:

networks:
  cloud:
    name: cloud
  traefik:
    name: traefik
